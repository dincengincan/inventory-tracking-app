{"version":3,"sources":["components/FormLayout.js","pages/LoginPage.js","components/ProductsListCustomer.js","pages/CustomerPage.js","common/hooks.js","components/Notification.js","components/AddUser.js","components/UsersList.js","components/ModalMui.js","components/UserModal.js","components/ProductModal.js","components/AddProduct.js","components/ProductsList.js","pages/AdminPage.js","pages/RequestPage.js","pages/RequestSubmitPage.js","pages/SuccessPage.js","components/Header.js","components/SimpleStepper.js","App.js","serviceWorker.js","index.js"],"names":["Container","styled","div","width","FormLayout","children","useStyles","makeStyles","theme","root","margin","spacing","LoginPage","useState","username","setUsername","password","setPassword","dropdownValue","setDropdownValue","loginData","setLoginData","result","setResult","history","useHistory","classes","useEffect","a","fetch","response","json","data","users","map","user","getData","className","noValidate","autoComplete","TextField","style","id","select","label","value","onChange","e","target","MenuItem","onClick","preventDefault","selectedUserObject","find","item","isUserCorrect","userType","push","pathname","state","userInfo","class","table","minWidth","ProductsListCustomer","productsData","handleRequestClick","products","length","TableContainer","component","Paper","Table","aria-label","TableHead","TableRow","TableCell","align","TableBody","key","productId","scope","productName","categoryName","inventoryNumber","disabled","CustomerPage","location","useLocation","setProductsData","product","getProductsData","console","log","selectedData","useForm","labels","options","defaultStates","dropdownInputValue","firstInputValue","firstInput","secondInputValue","secondInput","thirdInputValue","thirdInput","fourthInputValue","fourthInput","fifthInputValue","fifthInput","sixthInputValue","sixthInput","inputValues","setInputValues","genericHandleChange","type","event","dropdown","required","option","StyledText","Notification","notificationText","AddUser","addNewUser","newUserResult","closeNotification","showError","setShowError","userForm","inputStates","comboboxValue","usernameInputValue","passwordInputValue","nameInputValue","surnameInputValue","emailInputValue","Snackbar","open","autoHideDuration","anchorOrigin","vertical","horizontal","message","onClose","UsersList","loginUserData","deleteUser","handleClickModal","customerId","name","surname","email","StyledModalContainer","StyledFormContainer","form","ModalMui","container","useRef","Portal","current","UserModal","closeModal","formData","getUsersData","updateUser","settings","method","body","JSON","stringify","headers","fetchResponse","ProductModal","productForm","productNameValue","inventoryNumberValue","updateProduct","AddProduct","newProductResult","addNewProduct","ProductsList","deleteProduct","StyledContentButton","button","selectedContent","StyledContentButtonSecond","ButtonContainer","AdminPage","showContent","setShowContent","setNewUserResult","setNewProductResult","usersData","setUsersData","notifications","setNotifications","showUserModal","setShowUserModal","showProductModal","setShowProductModal","selectedCustomerId","setSelectedCustomerId","selectedProductId","setSelectedProductId","handleClickUserModal","handleClickProductModal","getNotifications","UserPanel","ProductPanel","notification","orderOwner","createdAt","orderNumber","orderName","RequestPage","requestedNumber","setRequestedNumber","placeholder","color","Number","to","RequestSubmitPage","makeProductRequest","addNewOrder","currentDate","Date","date","getDate","getMonth","getFullYear","getHours","getMinutes","getSeconds","orderCategory","SuccessPage","Header","paddingRight","backButton","marginRight","instructions","marginTop","marginBottom","SimpleStepper","Stepper","activeStep","alternativeLabel","Step","StepLabel","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8426f103.chunk.js","sourcesContent":["import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst Container = styled.div`\r\n  width: ${({ width }) => (width ? `${width}px` : '800px')};\r\n  margin: 0 auto;\r\n  background-color: #dcc7aa;\r\n  box-shadow: 0px 0px 10px 1px #bbbbbb;\r\n  border-radius: 5px;\r\n  padding: 20px 100px;\r\n\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n\r\n  margin-top: 50px;\r\n`;\r\n\r\nconst FormLayout = ({ children, width }) => (\r\n  <Container width={width}>{children}</Container>\r\n);\r\n\r\nexport default FormLayout;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport FormLayout from '../components/FormLayout';\r\n\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nconst LoginPage = () => {\r\n  const [username, setUsername] = useState('sezgin');\r\n  const [password, setPassword] = useState('12345');\r\n  const [dropdownValue, setDropdownValue] = useState('Yönetici');\r\n  const [loginData, setLoginData] = useState({});\r\n  const [result, setResult] = useState('');\r\n\r\n  const history = useHistory();\r\n\r\n  const classes = useStyles();\r\n\r\n  const handleUsernameChange = (e) => {\r\n    setUsername(e.target.value);\r\n  };\r\n\r\n  const handlePasswordChange = (e) => {\r\n    setPassword(e.target.value);\r\n  };\r\n\r\n  const handleDropdownChange = (e) => {\r\n    setDropdownValue(e.target.value);\r\n  };\r\n  useEffect(() => {\r\n    const getData = async () => {\r\n      const response = await fetch(\r\n        'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/musteri'\r\n      );\r\n      const data = await response.json();\r\n      const users = data.map((user) => user);\r\n      setLoginData({\r\n        users: users,\r\n      });\r\n    };\r\n    getData();\r\n  }, []);\r\n\r\n  const handleLogin = (e) => {\r\n    e.preventDefault();\r\n\r\n    const selectedUserObject = loginData.users.find((item) => {\r\n      return item.username === username;\r\n    });\r\n\r\n    if (selectedUserObject) {\r\n      const isUserCorrect =\r\n        selectedUserObject.password === password &&\r\n        selectedUserObject.userType === dropdownValue;\r\n      if (dropdownValue === 'Yönetici' && isUserCorrect) {\r\n        setResult('success');\r\n        history.push('/admin');\r\n        return;\r\n      }\r\n      if (dropdownValue === 'Müşteri' && isUserCorrect) {\r\n        setResult('success');\r\n        history.push({\r\n          pathname: '/customer',\r\n          state: { userInfo: selectedUserObject },\r\n        });\r\n        return;\r\n      }\r\n    }\r\n    setResult('failure');\r\n  };\r\n\r\n  return (\r\n    <FormLayout width={300}>\r\n      <h2>LOGIN</h2>\r\n      <form className={classes.root} noValidate autoComplete=\"off\">\r\n        <div>\r\n          <TextField\r\n            style={{ margin: '20px 0' }}\r\n            id=\"standard-select-usertype\"\r\n            select\r\n            label=\"Kullanıcı Tipi\"\r\n            value={dropdownValue}\r\n            onChange={handleDropdownChange}\r\n          >\r\n            <MenuItem value=\"Müşteri\">Müşteri</MenuItem>\r\n            <MenuItem value=\"Yönetici\">Yönetici</MenuItem>\r\n          </TextField>\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            style={{ margin: '20px 0' }}\r\n            id=\"standard-basic\"\r\n            label=\"Kullanıcı Adı\"\r\n            value={username}\r\n            onChange={handleUsernameChange}\r\n          />\r\n        </div>\r\n        <div>\r\n          <TextField\r\n            style={{ margin: '20px 0' }}\r\n            id=\"standard-basic\"\r\n            label=\"Şifre\"\r\n            value={password}\r\n            onChange={handlePasswordChange}\r\n          />\r\n        </div>\r\n      </form>\r\n      <button onClick={handleLogin} class=\"button button-login\">\r\n        Giriş Yap\r\n      </button>\r\n\r\n      {result === 'success' && (\r\n        <div>\r\n          <h3>Giriş Başarılı! Yönlendiriliyorsunuz...</h3>\r\n        </div>\r\n      )}\r\n      {result === 'failure' && (\r\n        <div>\r\n          <h3>Hatalı Kullanıcı Adı veya Şifre!</h3>\r\n        </div>\r\n      )}\r\n    </FormLayout>\r\n  );\r\n};\r\n\r\nexport default LoginPage;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst ProductsListCustomer = ({ productsData, handleRequestClick }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <h3 class=\"table-label\">\r\n        Mevcut Ürünler ({productsData.products && productsData.products.length}{' '}\r\n        adet)\r\n      </h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Ürün İsmi</TableCell>\r\n              <TableCell align=\"right\">Kategori</TableCell>\r\n              <TableCell align=\"right\">Stok</TableCell>\r\n              <TableCell align=\"center\">İşlem</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {productsData.products &&\r\n              productsData.products.map((item) => (\r\n                <TableRow key={item.productId}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {item.productName}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{item.categoryName}</TableCell>\r\n                  <TableCell align=\"right\">{item.inventoryNumber}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    {item.inventoryNumber === 0 ? (\r\n                      <button class=\"button button-list disabled\" disabled>\r\n                        Talep Et\r\n                      </button>\r\n                    ) : (\r\n                      <button\r\n                        class=\"button button-list\"\r\n                        onClick={() => handleRequestClick(item.productId)}\r\n                      >\r\n                        Talep Et\r\n                      </button>\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsListCustomer;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\n\r\nimport ProductsListCustomer from '../components/ProductsListCustomer';\r\nimport FormLayout from '../components/FormLayout';\r\n\r\nconst CustomerPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { state } = location;\r\n  const [productsData, setProductsData] = useState({});\r\n\r\n  const handleRequestClick = (productId) => {\r\n    console.log(productsData);\r\n    const selectedData = productsData.products.find((product) => {\r\n      return product.productId === productId;\r\n    });\r\n    history.push({ pathname: '/request', state: { ...state, selectedData } });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getProductsData = async () => {\r\n      const response = await fetch(\r\n        'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/inventory'\r\n      );\r\n      const data = await response.json();\r\n      const products = data.map((product) => product);\r\n      setProductsData({\r\n        products: products,\r\n      });\r\n    };\r\n    getProductsData();\r\n  }, []);\r\n\r\n  return (\r\n    <FormLayout>\r\n      <h2>Müşteri Paneli</h2>\r\n      <ProductsListCustomer\r\n        handleRequestClick={handleRequestClick}\r\n        productsData={productsData}\r\n      />\r\n    </FormLayout>\r\n  );\r\n};\r\n\r\nexport default CustomerPage;\r\n","import React, { useState } from 'react';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\n\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    '& .MuiTextField-root': {\r\n      margin: theme.spacing(1),\r\n      width: 200,\r\n    },\r\n  },\r\n}));\r\n\r\nconst useForm = (labels, options, defaultStates) => {\r\n  const classes = useStyles();\r\n  const [inputValues, setInputValues] = useState({\r\n    dropdownInputValue: options[1],\r\n    firstInputValue: defaultStates.firstInput || '',\r\n    secondInputValue: defaultStates.secondInput || '',\r\n    thirdInputValue: defaultStates.thirdInput || '',\r\n    fourthInputValue: defaultStates.fourthInput || '',\r\n    fifthInputValue: defaultStates.fifthInput || '',\r\n    sixthInputValue: defaultStates.sixthInput || '',\r\n  });\r\n\r\n  const genericHandleChange = (type, event) => {\r\n    setInputValues({ ...inputValues, [type]: event.target.value });\r\n  };\r\n\r\n  const form = () => (\r\n    <form className={classes.root} noValidate autoComplete=\"off\">\r\n      {labels.dropdown && (\r\n        <div>\r\n          <TextField\r\n            id=\"standard-select-usertype\"\r\n            select\r\n            label=\"Kullanıcı Tipi\"\r\n            value={inputValues.dropdownInputValue}\r\n            onChange={(e) => genericHandleChange('dropdownInputValue', e)}\r\n            required\r\n          >\r\n            {options.map((option) => {\r\n              return <MenuItem value={option}>{option}</MenuItem>;\r\n            })}\r\n          </TextField>\r\n        </div>\r\n      )}\r\n\r\n      {labels.firstInput && (\r\n        <div>\r\n          <TextField\r\n            id=\"standart-basic\"\r\n            label={labels.firstInput}\r\n            value={inputValues.firstInputValue}\r\n            onChange={(e) => genericHandleChange('firstInputValue', e)}\r\n            required\r\n          />\r\n        </div>\r\n      )}\r\n      {labels.secondInput && (\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label={labels.secondInput}\r\n            value={inputValues.secondInputValue}\r\n            onChange={(e) => genericHandleChange('secondInputValue', e)}\r\n            required\r\n          />\r\n        </div>\r\n      )}\r\n      {labels.thirdInput && (\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label={labels.thirdInput}\r\n            value={inputValues.thirdInputValue}\r\n            onChange={(e) => genericHandleChange('thirdInputValue', e)}\r\n            required\r\n          />\r\n        </div>\r\n      )}\r\n      {labels.fourthInput && (\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label={labels.fourthInput}\r\n            value={inputValues.fourthInputValue}\r\n            onChange={(e) => genericHandleChange('fourthInputValue', e)}\r\n            required\r\n          />\r\n        </div>\r\n      )}\r\n      {labels.fifthInput && (\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label={labels.fifthInput}\r\n            value={inputValues.fifthInputValue}\r\n            onChange={(e) => genericHandleChange('fifthInputValue', e)}\r\n            required\r\n          />\r\n        </div>\r\n      )}\r\n      {labels.sixthInput && (\r\n        <div>\r\n          <TextField\r\n            id=\"outlined-basic\"\r\n            label={labels.sixthInput}\r\n            value={inputValues.sixthInputValue}\r\n            onChange={(e) => genericHandleChange('sixthInputValue', e)}\r\n            required\r\n          />\r\n        </div>\r\n      )}\r\n    </form>\r\n  );\r\n\r\n  return [\r\n    form,\r\n    [\r\n      inputValues.dropdownInputValue,\r\n      inputValues.firstInputValue,\r\n      inputValues.secondInputValue,\r\n      inputValues.thirdInputValue,\r\n      inputValues.fourthInputValue,\r\n      inputValues.fifthInputValue,\r\n      inputValues.sixthInputValue,\r\n    ],\r\n  ];\r\n};\r\n\r\nexport default useForm;\r\n","import React from 'react';\r\nimport styled from 'styled-components';\r\n\r\nconst StyledText = styled.div`\r\n  color: red;\r\n  font-size: 15px;\r\n`;\r\n\r\nconst Notification = ({ notificationText }) => (\r\n  <StyledText>{notificationText}</StyledText>\r\n);\r\n\r\nexport default Notification;\r\n","import React, { useState } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport useForm from '../common/hooks';\r\nimport Notification from './Notification';\r\n\r\nconst AddUser = ({ addNewUser, newUserResult, closeNotification }) => {\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const labels = {\r\n    dropdown: 'Kullanıcı Tipi',\r\n    firstInput: 'Kullanıcı Adı',\r\n    secondInput: 'Şifre',\r\n    thirdInput: 'Ad',\r\n    fourthInput: 'Soyad',\r\n    fifthInput: 'Email',\r\n  };\r\n\r\n  const defaultStates = {\r\n    dropdown: 'Müşteri',\r\n  };\r\n\r\n  const options = ['Yönetici', 'Müşteri'];\r\n\r\n  const [userForm, inputStates] = useForm(labels, options, defaultStates);\r\n\r\n  const [\r\n    comboboxValue,\r\n    usernameInputValue,\r\n    passwordInputValue,\r\n    nameInputValue,\r\n    surnameInputValue,\r\n    emailInputValue,\r\n  ] = inputStates;\r\n  console.log(comboboxValue);\r\n\r\n  const handleClick = () => {\r\n    if (\r\n      usernameInputValue.length &&\r\n      passwordInputValue.length &&\r\n      nameInputValue.length &&\r\n      surnameInputValue.length &&\r\n      emailInputValue\r\n    ) {\r\n      addNewUser(\r\n        comboboxValue,\r\n        usernameInputValue,\r\n        passwordInputValue,\r\n        nameInputValue,\r\n        surnameInputValue,\r\n        emailInputValue\r\n      );\r\n    } else {\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"form\">\r\n        {userForm()}\r\n        {/*can not use as < UserForm /> due to problem of re-rendering */}\r\n        {showError && (\r\n          <Notification notificationText=\"* işaretli alanlar gereklidir\" />\r\n        )}\r\n        <button className=\"button\" onClick={handleClick}>\r\n          Add\r\n        </button>\r\n      </div>\r\n      <Snackbar\r\n        open={newUserResult === 'success'}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        message=\"Yeni kullanıcı başarıyla eklendi\"\r\n        key={('top', 'center')}\r\n        onClose={closeNotification}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddUser;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst UsersList = ({ loginUserData, deleteUser, handleClickModal }) => {\r\n  const classes = useStyles();\r\n  return (\r\n    <>\r\n      <h3 class=\"table-label\">\r\n        Mevcut Kullanıcılar ({loginUserData.users && loginUserData.users.length}{' '}\r\n        adet)\r\n      </h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Kullanıcı Adı</TableCell>\r\n              <TableCell align=\"right\">Ad</TableCell>\r\n              <TableCell align=\"right\">Soyad</TableCell>\r\n              <TableCell align=\"right\">Kullanıcı Tipi</TableCell>\r\n              <TableCell align=\"right\">Parola</TableCell>\r\n              <TableCell align=\"right\">E-mail</TableCell>\r\n              <TableCell align=\"center\">İşlem</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {loginUserData.users &&\r\n              loginUserData.users.map((item) => (\r\n                <TableRow key={item.customerId}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {item.username}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{item.name}</TableCell>\r\n                  <TableCell align=\"right\">{item.surname}</TableCell>\r\n                  <TableCell align=\"right\">{item.userType}</TableCell>\r\n                  <TableCell align=\"right\">{item.password}</TableCell>\r\n                  <TableCell align=\"right\">{item.email}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <button\r\n                      onClick={() => handleClickModal(item.customerId)}\r\n                      className=\"button button-list\"\r\n                    >\r\n                      Düzenle\r\n                    </button>\r\n                    <button\r\n                      onClick={() => deleteUser(item.customerId)}\r\n                      className=\"button button-list\"\r\n                    >\r\n                      Sil\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React, { useRef } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport Portal from '@material-ui/core/Portal';\r\n\r\nconst StyledModalContainer = styled.div`\r\n  position: fixed;\r\n  left: 0;\r\n  top: 0;\r\n  bottom: 0;\r\n  right: 0;\r\n  background-color: rgba(0, 0, 0, 0.5);\r\n`;\r\n\r\nconst StyledFormContainer = styled.form`\r\n  background-color: white;\r\n  height: auto;\r\n  width: 400px;\r\n  margin: auto;\r\n  padding: 20px;\r\n  margin-top: 20px;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  flex-direction: column;\r\n  align-items: center;\r\n`;\r\n\r\nconst ModalMui = ({ children }) => {\r\n  const container = useRef(null);\r\n\r\n  return (\r\n    <Portal container={container.current}>\r\n      <StyledModalContainer>\r\n        <StyledFormContainer>{children}</StyledFormContainer>\r\n      </StyledModalContainer>\r\n    </Portal>\r\n  );\r\n};\r\n\r\nexport default ModalMui;\r\n","import React, { useState } from 'react';\r\n\r\nimport useForm from '../common/hooks';\r\nimport Notification from './Notification';\r\n\r\nimport ModalMui from './ModalMui';\r\n\r\nconst UserModal = ({ closeModal, customerId, formData, getUsersData }) => {\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const selectedData = formData.users.find((user) => {\r\n    return user.customerId === customerId;\r\n  });\r\n\r\n  const labels = {\r\n    dropdown: 'Kullanıcı Tipi',\r\n    firstInput: 'Kullanıcı Adı',\r\n    secondInput: 'Şifre',\r\n    thirdInput: 'Ad',\r\n    fourthInput: 'Soyad',\r\n    fifthInput: 'Email',\r\n  };\r\n\r\n  const defaultStates = {\r\n    dropdown: selectedData.userType,\r\n    firstInput: selectedData.username,\r\n    secondInput: selectedData.password,\r\n    thirdInput: selectedData.name,\r\n    fourthInput: selectedData.surname,\r\n    fifthInput: selectedData.email,\r\n  };\r\n\r\n  const options = ['Yönetici', 'Müşteri'];\r\n\r\n  const [userForm, inputStates] = useForm(labels, options, defaultStates);\r\n  const [\r\n    comboboxValue,\r\n    usernameInputValue,\r\n    passwordInputValue,\r\n    nameInputValue,\r\n    surnameInputValue,\r\n    emailInputValue,\r\n  ] = inputStates;\r\n\r\n  const updateUser = async () => {\r\n    if (\r\n      !usernameInputValue.length ||\r\n      !passwordInputValue.length ||\r\n      !nameInputValue.length ||\r\n      !surnameInputValue.length ||\r\n      !emailInputValue\r\n    ) {\r\n      setShowError(true);\r\n      return;\r\n    }\r\n\r\n    const settings = {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        userType: comboboxValue,\r\n        name: nameInputValue,\r\n        surname: surnameInputValue,\r\n        username: usernameInputValue,\r\n        password: passwordInputValue,\r\n        email: emailInputValue,\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        `https://5e9b1cde10bf9c0016dd1b23.mockapi.io/musteri/${customerId}`,\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        closeModal();\r\n        getUsersData();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n  console.log('usermodal');\r\n  return (\r\n    <ModalMui>\r\n      {userForm()}\r\n      {showError && (\r\n        <Notification notificationText=\"* işaretli alanlar gereklidir\" />\r\n      )}\r\n      <button className=\"button modal\" onClick={updateUser}>\r\n        Kaydet\r\n      </button>\r\n      <button className=\"button modal\" onClick={closeModal}>\r\n        Kapat\r\n      </button>\r\n    </ModalMui>\r\n  );\r\n};\r\n\r\nexport default UserModal;\r\n","import React, { useState } from 'react';\r\n\r\nimport useForm from '../common/hooks';\r\nimport Notification from './Notification';\r\n\r\nimport ModalMui from './ModalMui';\r\n\r\nconst ProductModal = ({ closeModal, productId, formData, getProductsData }) => {\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const selectedData = formData.products.find((product) => {\r\n    return product.productId === productId;\r\n  });\r\n\r\n  const labels = {\r\n    dropdown: 'Kategori Adı',\r\n    firstInput: 'Ürün İsmi',\r\n    secondInput: 'Eklenecek Stok Sayısı',\r\n  };\r\n\r\n  const defaultStates = {\r\n    dropdown: selectedData.categoryName,\r\n    firstInput: selectedData.productName,\r\n    secondInput: selectedData.inventoryNumber,\r\n  };\r\n\r\n  const options = ['Kırtasiye', 'Teknik', 'Diğer'];\r\n\r\n  const [productForm, inputStates] = useForm(labels, options, defaultStates);\r\n  const [comboboxValue, productNameValue, inventoryNumberValue] = inputStates;\r\n\r\n  const updateProduct = async () => {\r\n    if (!productNameValue.length || !inventoryNumberValue.length) {\r\n      setShowError(true);\r\n      return;\r\n    }\r\n    const settings = {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        categoryName: comboboxValue,\r\n        productName: productNameValue,\r\n        inventoryNumber: inventoryNumberValue,\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        `https://5e9b1cde10bf9c0016dd1b23.mockapi.io/inventory/${productId}`,\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        closeModal();\r\n        getProductsData();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ModalMui>\r\n      {productForm()}\r\n      {showError && (\r\n        <Notification notificationText=\"* işaretli alanlar gereklidir\" />\r\n      )}\r\n      <button className=\"button modal\" onClick={updateProduct}>\r\n        Kaydet\r\n      </button>\r\n      <button className=\"button modal\" onClick={closeModal}>\r\n        Kapat\r\n      </button>\r\n    </ModalMui>\r\n  );\r\n};\r\n\r\nexport default ProductModal;\r\n","import React, { useState } from 'react';\r\nimport Snackbar from '@material-ui/core/Snackbar';\r\n\r\nimport useForm from '../common/hooks';\r\nimport Notification from './Notification';\r\n\r\nconst AddProduct = ({ newProductResult, addNewProduct, closeNotification }) => {\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const labels = {\r\n    dropdown: 'Kategori Adı',\r\n    firstInput: 'Ürün İsmi',\r\n    secondInput: 'Eklenecek Stok Sayısı',\r\n  };\r\n\r\n  const defaultStates = {\r\n    dropdown: 'Teknik',\r\n  };\r\n\r\n  const options = ['Kırtasiye', 'Teknik', 'Diğer'];\r\n\r\n  const [productForm, inputStates] = useForm(labels, options, defaultStates);\r\n  const [comboboxValue, productName, inventoryNumber] = inputStates;\r\n\r\n  const handleClick = () => {\r\n    if (inventoryNumber.length && productName.length) {\r\n      addNewProduct(comboboxValue, productName, inventoryNumber);\r\n    } else {\r\n      setShowError(true);\r\n    }\r\n  };\r\n\r\n  //snackbar disappears due to twice rendering problem\r\n  return (\r\n    <>\r\n      <div class=\"form\">\r\n        {productForm()}\r\n        {/*can not use as < ProductFrom /> due to problem of re-rendering */}\r\n        {showError && (\r\n          <Notification notificationText=\"* işaretli alanlar gereklidir\" />\r\n        )}\r\n        <button className=\"button\" onClick={handleClick}>\r\n          Add\r\n        </button>\r\n      </div>\r\n      <Snackbar\r\n        open={newProductResult === 'success'}\r\n        autoHideDuration={5000}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        message=\"Yeni ürün başarıyla eklendi\"\r\n        key={('top', 'center')}\r\n        onClose={closeNotification}\r\n      />\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddProduct;\r\n","import React from 'react';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n});\r\n\r\nconst ProductsList = ({ productsData, deleteProduct, handleClickModal }) => {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <>\r\n      <h3 class=\"table-label\">\r\n        Mevcut Ürünler ({productsData.products && productsData.products.length}{' '}\r\n        adet)\r\n      </h3>\r\n      <TableContainer component={Paper}>\r\n        <Table className={classes.table} aria-label=\"simple table\">\r\n          <TableHead>\r\n            <TableRow>\r\n              <TableCell>Ürün İsmi</TableCell>\r\n              <TableCell align=\"right\">Kategori</TableCell>\r\n              <TableCell align=\"right\">Stok</TableCell>\r\n              <TableCell align=\"center\">İşlem</TableCell>\r\n            </TableRow>\r\n          </TableHead>\r\n          <TableBody>\r\n            {productsData.products &&\r\n              productsData.products.map((item) => (\r\n                <TableRow key={item.productId}>\r\n                  <TableCell component=\"th\" scope=\"row\">\r\n                    {item.productName}\r\n                  </TableCell>\r\n                  <TableCell align=\"right\">{item.categoryName}</TableCell>\r\n                  <TableCell align=\"right\">{item.inventoryNumber}</TableCell>\r\n                  <TableCell align=\"center\">\r\n                    <button\r\n                      onClick={() => handleClickModal(item.productId)}\r\n                      className=\"button button-list\"\r\n                    >\r\n                      Düzenle\r\n                    </button>\r\n                    <button\r\n                      onClick={() => deleteProduct(item.productId)}\r\n                      className=\"button button-list\"\r\n                    >\r\n                      Sil\r\n                    </button>\r\n                  </TableCell>\r\n                </TableRow>\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProductsList;\r\n","import React, { useState, useEffect } from 'react';\r\nimport styled from 'styled-components';\r\n\r\nimport AddUser from '../components/AddUser';\r\nimport UsersList from '../components/UsersList';\r\nimport UserModal from '../components/UserModal';\r\nimport ProductModal from '../components/ProductModal';\r\nimport AddProduct from '../components/AddProduct';\r\nimport ProductsList from '../components/ProductsList';\r\nimport FormLayout from '../components/FormLayout';\r\n\r\nconst StyledContentButton = styled.button`\r\n  margin-top: 20px;\r\n  padding: 5px 10px;\r\n  background-color: ${({ selectedContent }) =>\r\n    selectedContent ? 'rgb(155, 83, 101)' : 'rgb(105, 83, 101)'};\r\n  border: none;\r\n  border-top-left-radius: 20px;\r\n  border-bottom-left-radius: 20px;\r\n  color: rgb(209, 209, 209);\r\n  cursor: pointer;\r\n  outline: none;\r\n  padding: 10px 50px;\r\n\r\n  :hover {\r\n    background-color: rgb(17, 9, 15);\r\n  }\r\n`;\r\n\r\nconst StyledContentButtonSecond = styled(StyledContentButton)`\r\n  border-top-left-radius: 0px;\r\n  border-bottom-left-radius: 0px;\r\n  border-top-right-radius: 20px;\r\n  border-bottom-right-radius: 20px;\r\n`;\r\n\r\nconst ButtonContainer = styled.div`\r\n  display: flex;\r\n  padding: 10px 40px;\r\n`;\r\n\r\nconst AdminPage = () => {\r\n  const [showContent, setShowContent] = useState('');\r\n  const [newUserResult, setNewUserResult] = useState('');\r\n  const [newProductResult, setNewProductResult] = useState('');\r\n  const [usersData, setUsersData] = useState({});\r\n  const [productsData, setProductsData] = useState({});\r\n  const [notifications, setNotifications] = useState([]);\r\n  const [showUserModal, setShowUserModal] = useState(false);\r\n  const [showProductModal, setShowProductModal] = useState(false);\r\n  const [selectedCustomerId, setSelectedCustomerId] = useState('');\r\n  const [selectedProductId, setSelectedProductId] = useState('');\r\n\r\n  const handleClickUserModal = (customerId) => {\r\n    setSelectedCustomerId(customerId);\r\n    setShowUserModal(true);\r\n  };\r\n\r\n  const handleClickProductModal = (productId) => {\r\n    setSelectedProductId(productId);\r\n    setShowProductModal(true);\r\n  };\r\n\r\n  const closeUserModal = () => {\r\n    setShowUserModal(false);\r\n  };\r\n\r\n  const closeProductModal = () => {\r\n    setShowProductModal(false);\r\n  };\r\n\r\n  const handleUserContent = () => setShowContent('user');\r\n  const handleProductContent = () => setShowContent('product');\r\n\r\n  const addNewUser = async (\r\n    comboboxValue,\r\n    usernameInputValue,\r\n    passwordInputValue,\r\n    nameInputValue,\r\n    surnameInputValue,\r\n    emailInputValue\r\n  ) => {\r\n    const settings = {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        name: nameInputValue,\r\n        surname: surnameInputValue,\r\n        username: usernameInputValue,\r\n        password: passwordInputValue,\r\n        userType: comboboxValue,\r\n        email: emailInputValue,\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/musteri',\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        getUsersData();\r\n        setNewUserResult('success');\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const addNewProduct = async (comboboxValue, productName, inventoryNumber) => {\r\n    const settings = {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        productName: productName,\r\n        categoryName: comboboxValue,\r\n        inventoryNumber: inventoryNumber,\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/inventory',\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        getProductsData();\r\n        setNewProductResult('success');\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const getUsersData = async () => {\r\n    const response = await fetch(\r\n      'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/musteri'\r\n    );\r\n    const data = await response.json();\r\n    const users = data.map((user) => user);\r\n    setUsersData({\r\n      users: users,\r\n    });\r\n  };\r\n\r\n  const getProductsData = async () => {\r\n    const response = await fetch(\r\n      'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/inventory'\r\n    );\r\n    const data = await response.json();\r\n    const products = data.map((product) => product);\r\n    setProductsData({\r\n      products: products,\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const getUsersData = async () => {\r\n      const response = await fetch(\r\n        'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/musteri'\r\n      );\r\n      const data = await response.json();\r\n      const users = data.map((user) => user);\r\n      setUsersData({\r\n        users: users,\r\n      });\r\n    };\r\n    getUsersData();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getNotifications = async () => {\r\n      try {\r\n        const fetchResponse = await fetch(\r\n          'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/orders'\r\n        );\r\n        const data = await fetchResponse.json();\r\n        if (data) {\r\n          setNotifications(data);\r\n        }\r\n      } catch (e) {\r\n        console.log(e);\r\n      }\r\n    };\r\n    getNotifications();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    const getProductsData = async () => {\r\n      const response = await fetch(\r\n        'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/inventory'\r\n      );\r\n      const data = await response.json();\r\n      const products = data.map((product) => product);\r\n      setProductsData({\r\n        products: products,\r\n      });\r\n    };\r\n    getProductsData();\r\n  }, []);\r\n\r\n  const deleteUser = async (customerId) => {\r\n    const settings = {\r\n      method: 'DELETE',\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        `https://5e9b1cde10bf9c0016dd1b23.mockapi.io/musteri/${customerId}`,\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        getUsersData();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const deleteProduct = async (productId) => {\r\n    const settings = {\r\n      method: 'DELETE',\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        `https://5e9b1cde10bf9c0016dd1b23.mockapi.io/inventory/${productId}`,\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        getProductsData();\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const UserPanel = () => (\r\n    <>\r\n      <AddUser\r\n        addNewUser={addNewUser}\r\n        newUserResult={newUserResult}\r\n        closeNotification={closeNotification}\r\n      />\r\n      <UsersList\r\n        deleteUser={deleteUser}\r\n        loginUserData={usersData}\r\n        handleClickModal={handleClickUserModal}\r\n      />\r\n    </>\r\n  );\r\n\r\n  const ProductPanel = () => (\r\n    <>\r\n      <AddProduct\r\n        addNewProduct={addNewProduct}\r\n        newProductResult={newProductResult}\r\n        closeNotification={closeNotification}\r\n      />\r\n      <ProductsList\r\n        deleteProduct={deleteProduct}\r\n        productsData={productsData}\r\n        handleClickModal={handleClickProductModal}\r\n      />\r\n    </>\r\n  );\r\n\r\n  const closeNotification = () => {\r\n    setNewProductResult(\"\");\r\n    setNewUserResult(\"\")\r\n  };\r\n\r\n  return (\r\n    <FormLayout>\r\n      <h2>Admin Panel</h2>\r\n      <ButtonContainer>\r\n        <StyledContentButton\r\n          selectedContent={showContent === 'user'}\r\n          onClick={handleUserContent}\r\n        >\r\n          User Panel\r\n        </StyledContentButton>\r\n        <StyledContentButtonSecond\r\n          selectedContent={showContent === 'product'}\r\n          onClick={handleProductContent}\r\n        >\r\n          Product Panel\r\n        </StyledContentButtonSecond>\r\n      </ButtonContainer>\r\n      {showContent === 'user' && <UserPanel />}\r\n\r\n      {showContent === 'product' && <ProductPanel />}\r\n      {showProductModal && (\r\n        <ProductModal\r\n          formData={productsData}\r\n          productId={selectedProductId}\r\n          closeModal={closeProductModal}\r\n          getProductsData={getProductsData}\r\n        />\r\n      )}\r\n      {showUserModal && (\r\n        <UserModal\r\n          formData={usersData}\r\n          customerId={selectedCustomerId}\r\n          closeModal={closeUserModal}\r\n          getUsersData={getUsersData}\r\n        />\r\n      )}\r\n      <h3 class=\"notification-label\">Kullanıcı Bildirimleri</h3>\r\n      <ul>\r\n        {notifications.map((notification) => {\r\n          return (\r\n            <li>\r\n              <b>{`${notification.orderOwner.user.name} ${notification.orderOwner.user.surname} \r\n                ${notification.createdAt}`}</b>{' '}\r\n              tarihinde <b>{`${notification.orderNumber}`}</b> adet{' '}\r\n              <b>{`${notification.orderName}`}</b> talep etti.\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n    </FormLayout>\r\n  );\r\n};\r\n\r\nexport default AdminPage;\r\n","import React, { useState } from 'react';\r\nimport { useLocation, useHistory, Link } from 'react-router-dom';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nimport FormLayout from '../components/FormLayout';\r\n\r\nconst RequestPage = () => {\r\n  const location = useLocation();\r\n  const { state } = location;\r\n\r\n  const [requestedNumber, setRequestedNumber] = useState(\r\n    state.requestedNumber || ''\r\n  );\r\n  const [showError, setShowError] = useState(false);\r\n\r\n  const history = useHistory();\r\n\r\n  const handleRequestClick = () => {\r\n    if (Number(requestedNumber) > Number(state.selectedData.inventoryNumber)) {\r\n      setShowError(true);\r\n    } else if (!requestedNumber.length) {\r\n      return;\r\n    } else {\r\n      history.push({\r\n        pathname: '/request-submit',\r\n        state: { ...state, requestedNumber: requestedNumber },\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleInputChange = (e) => {\r\n    setShowError(false);\r\n    setRequestedNumber(e.target.value);\r\n  };\r\n\r\n  return (\r\n    <FormLayout>\r\n      <div class=\"request-form\">\r\n        <label>Ürün İsmi</label>\r\n        <h4>{state.selectedData.productName}</h4>\r\n        <label>Ürün Kategorisi</label>\r\n        <h4>{state.selectedData.categoryName}</h4>\r\n        <label>Stok Sayısı</label>\r\n        <h4>{state.selectedData.inventoryNumber}</h4>\r\n\r\n        <label>\r\n          Talep Edilen Sayı\r\n          <div>\r\n            <TextField\r\n              style={{ margin: '20px 0' }}\r\n              id=\"standard-basic\"\r\n              value={requestedNumber}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Sayı giriniz\"\r\n            />\r\n          </div>\r\n        </label>\r\n        {showError && (\r\n          <h4 style={{ color: 'red' }}>\r\n            Stokta yeterli ürün bulunmuyor. Lütfen tekrar giriniz\r\n          </h4>\r\n        )}\r\n      </div>\r\n      <button class=\"button stepper\" onClick={handleRequestClick}>\r\n        Onayla\r\n      </button>\r\n      <Link to=\"/customer\">\r\n        <button class=\"button stepper\">Vazgeç</button>\r\n      </Link>\r\n    </FormLayout>\r\n  );\r\n};\r\n\r\nexport default RequestPage;\r\n","import React from 'react';\r\nimport { useLocation, useHistory, Link } from 'react-router-dom';\r\n\r\nimport FormLayout from '../components/FormLayout';\r\n\r\nconst RequestSubmitPage = () => {\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const { state } = location;\r\n\r\n  const makeProductRequest = async () => {\r\n    const settings = {\r\n      method: 'PUT',\r\n      body: JSON.stringify({\r\n        inventoryNumber:\r\n          Number(state.selectedData.inventoryNumber) -\r\n          Number(state.requestedNumber),\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        `https://5e9b1cde10bf9c0016dd1b23.mockapi.io/inventory/${state.selectedData.productId}`,\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        history.push({ pathname: '/request-success', state: state });\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const addNewOrder = async () => {\r\n    const currentDate = new Date();\r\n    const date = `${currentDate.getDate()}/${\r\n      currentDate.getMonth() + 1\r\n    }/${currentDate.getFullYear()} - ${currentDate.getHours()}:${currentDate.getMinutes()}:${currentDate.getSeconds()}`;\r\n    const settings = {\r\n      method: 'POST',\r\n      body: JSON.stringify({\r\n        createdAt: date,\r\n        orderName: state.selectedData.productName,\r\n        orderCategory: state.selectedData.categoryName,\r\n        orderNumber: state.requestedNumber,\r\n        orderOwner: {\r\n          user: {\r\n            name: state.userInfo.name,\r\n            surname: state.userInfo.surname,\r\n            id: state.userInfo.id,\r\n          },\r\n        },\r\n      }),\r\n      headers: {\r\n        'Content-type': 'application/json; charset=UTF-8',\r\n      },\r\n    };\r\n    try {\r\n      const fetchResponse = await fetch(\r\n        'https://5e9b1cde10bf9c0016dd1b23.mockapi.io/orders',\r\n        settings\r\n      );\r\n      const data = await fetchResponse.json();\r\n      if (data) {\r\n        console.log('success');\r\n      }\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  const handleClick = () => {\r\n    makeProductRequest();\r\n    addNewOrder();\r\n  };\r\n\r\n  return (\r\n    <FormLayout>\r\n      <div class=\"request-form\">\r\n        <label>Ürün İsmi</label>\r\n        <h4>{state.selectedData.productName}</h4>\r\n        <label>Ürün Kategorisi</label>\r\n        <h4>{state.selectedData.categoryName}</h4>\r\n        <label>Stok Sayısı</label>\r\n        <h4>{state.selectedData.inventoryNumber}</h4>\r\n        <label>Talep Edilen Sayı</label>\r\n        <h4>{state.requestedNumber}</h4>\r\n      </div>\r\n      <Link\r\n        to={{\r\n          pathname: '/request',\r\n          state: state,\r\n        }}\r\n      >\r\n        <button class=\"button stepper\">Düzelt</button>\r\n      </Link>\r\n      <Link to=\"/customer\">\r\n        <button class=\"button stepper\">Geri Dön</button>\r\n      </Link>\r\n      <button class=\"button stepper\" onClick={handleClick}>\r\n        Onayla\r\n      </button>\r\n    </FormLayout>\r\n  );\r\n};\r\n\r\nexport default RequestSubmitPage;\r\n","import React from 'react';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n\r\nimport FormLayout from '../components/FormLayout';\r\n\r\nconst SuccessPage = () => {\r\n  const location = useLocation();\r\n  const { state } = location;\r\n\r\n  return (\r\n    <FormLayout>\r\n      <h2>Talebiniz Başarıyla Oluşturuldu</h2>\r\n      <div class=\"request-form\">\r\n        <label>Talep Edilen Ürün İsmi</label>\r\n        <h4>{state.selectedData.productName}</h4>\r\n        <label>Talep Edilen Ürün Kategorisi</label>\r\n        <h4>{state.selectedData.categoryName}</h4>\r\n        <label>Talep Edilen Ürün Sayısı</label>\r\n        <h4>{state.requestedNumber}</h4>\r\n      </div>\r\n      <Link to=\"/customer\">\r\n        <button class=\"button stepper\">Müşteri Paneline Dön</button>\r\n      </Link>\r\n      <Link to=\"/\">\r\n        <button class=\"button stepper\">Çıkış Yap</button>\r\n      </Link>\r\n    </FormLayout>\r\n  );\r\n};\r\n\r\nexport default SuccessPage;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nconst Header = () => (\r\n  <div className=\"header\">\r\n    <h3>Stok Takip App</h3>\r\n    <Link style={{ color: 'white', paddingRight: '20px' }} to=\"/\">\r\n      Login Sayfası\r\n    </Link>\r\n  </div>\r\n);\r\n\r\nexport default Header;\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\n\r\nimport { useLocation } from 'react-router-dom';\r\n\r\nimport '../App.css';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  backButton: {\r\n    marginRight: theme.spacing(1),\r\n  },\r\n  instructions: {\r\n    marginTop: theme.spacing(1),\r\n    marginBottom: theme.spacing(1),\r\n  },\r\n}));\r\n\r\nconst SimpleStepper = () => {\r\n  const location = useLocation();\r\n  const classes = useStyles();\r\n\r\n  const steps = ['Talep Oluştur', 'Talebi Onayla', 'Talebiniz Alınmıştır!'];\r\n\r\n  const getActiveStep = () => {\r\n    if (location.pathname === '/request') return 0;\r\n    if (location.pathname === '/request-submit') return 1;\r\n    if (location.pathname === '/request-success') return 3;\r\n    return 0;\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Stepper activeStep={getActiveStep()} alternativeLabel>\r\n        {steps.map((label) => (\r\n          <Step key={label}>\r\n            <StepLabel>{label}</StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SimpleStepper;\r\n","import React from 'react';\r\nimport { Route, Switch } from 'react-router';\r\n\r\nimport LoginPage from './pages/LoginPage';\r\nimport CustomerPage from './pages/CustomerPage';\r\nimport AdminPage from './pages/AdminPage';\r\nimport RequestPage from './pages/RequestPage';\r\nimport RequestSubmitPage from './pages/RequestSubmitPage';\r\nimport SuccessPage from './pages/SuccessPage';\r\nimport Header from './components/Header';\r\nimport SimpleStepper from './components/SimpleStepper';\r\n\r\nconst App = () => {\r\n  return (\r\n    <div>\r\n      <Header />\r\n      <Route\r\n        exact\r\n        path={`/(request|request-submit|request-success)`}\r\n        component={SimpleStepper}\r\n      />\r\n      <Switch>\r\n        <Route exact path=\"/\" component={LoginPage} />\r\n        <Route exact path=\"/admin\" component={AdminPage} />\r\n        <Route exact path=\"/customer\" component={CustomerPage} />\r\n        <Route exact path=\"/request\" component={RequestPage} />\r\n        <Route exact path=\"/request-submit\" component={RequestSubmitPage} />\r\n        <Route exact path=\"/request-success\" component={SuccessPage} />\r\n      </Switch>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nimport  { HashRouter } from \"react-router-dom\";\n\nReactDOM.render(\n <HashRouter>\n <React.StrictMode>\n    <App />\n  </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}